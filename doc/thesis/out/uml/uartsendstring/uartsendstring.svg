<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="288px" preserveAspectRatio="none" style="width:252px;height:288px;background:#FFFFFF;" version="1.1" viewBox="0 0 252 288" width="252px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="34.584" rx="12.5" ry="12.5" style="stroke:#000000;stroke-width:1.0;" width="44" x="103" y="6"/><text fill="#000000" font-family="Verdana" font-size="12" lengthAdjust="spacing" textLength="24" x="113" y="28.0645">开始</text><rect fill="#FFFFFF" height="34.584" rx="12.5" ry="12.5" style="stroke:#000000;stroke-width:1.0;" width="80" x="85" y="60.584"/><text fill="#000000" font-family="Verdana" font-size="12" lengthAdjust="spacing" textLength="60" x="95" y="82.6484">传入字符串</text><rect fill="#FFFFFF" height="34.584" rx="12.5" ry="12.5" style="stroke:#000000;stroke-width:1.0;" width="188" x="31" y="171.7271"/><text fill="#000000" font-family="Verdana" font-size="12" lengthAdjust="spacing" textLength="168" x="41" y="193.7915">调用调用串口发送字符数据函数</text><polygon fill="#FFFFFF" points="75.5,115.168,174.5,115.168,186.5,127.168,174.5,139.168,75.5,139.168,63.5,127.168,75.5,115.168" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="11" x="129" y="150.2271">是</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="99" x="75.5" y="131.5427">检测字符串结束标志</text><rect fill="#FFFFFF" height="34.584" rx="12.5" ry="12.5" style="stroke:#000000;stroke-width:1.0;" width="44" x="103" y="248.311"/><text fill="#000000" font-family="Verdana" font-size="12" lengthAdjust="spacing" textLength="24" x="113" y="270.3755">结束</text><line style="stroke:#000000;stroke-width:1.0;" x1="125" x2="125" y1="40.584" y2="60.584"/><polygon fill="#000000" points="121,50.584,125,60.584,129,50.584,125,54.584" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="125" x2="125" y1="139.168" y2="171.7271"/><polygon fill="#000000" points="121,161.7271,125,171.7271,129,161.7271,125,165.7271" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="125" x2="125" y1="206.311" y2="216.311"/><line style="stroke:#000000;stroke-width:1.0;" x1="125" x2="231" y1="216.311" y2="216.311"/><polygon fill="#000000" points="227,180.3347,231,170.3347,235,180.3347,231,176.3347" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="231" x2="231" y1="127.168" y2="216.311"/><line style="stroke:#000000;stroke-width:1.0;" x1="231" x2="186.5" y1="127.168" y2="127.168"/><polygon fill="#000000" points="196.5,123.168,186.5,127.168,196.5,131.168,192.5,127.168" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="63.5" x2="19" y1="127.168" y2="127.168"/><polygon fill="#000000" points="15,166.3347,19,176.3347,23,166.3347,19,170.3347" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="19" x2="19" y1="127.168" y2="228.311"/><line style="stroke:#000000;stroke-width:1.0;" x1="19" x2="125" y1="228.311" y2="228.311"/><line style="stroke:#000000;stroke-width:1.0;" x1="125" x2="125" y1="228.311" y2="248.311"/><polygon fill="#000000" points="121,238.311,125,248.311,129,238.311,125,242.311" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="125" x2="125" y1="95.168" y2="115.168"/><polygon fill="#000000" points="121,105.168,125,115.168,129,105.168,125,109.168" style="stroke:#000000;stroke-width:1.0;"/><!--MD5=[305de5da30d077562207bd82ef840c65]
@startuml
!theme plain
:开始;
:传入字符串;
while (检测字符串结束标志) is (是)
    :调用调用串口发送字符数据函数;
endwhile
:结束;

@enduml·

@startuml







<style>
  root {
    BackgroundColor white
    FontColor black
    FontName Verdana
    HyperLinkColor blue
    LineColor black
    LineThickness 1
    Margin 5
  }
  caption {
    LineThickness 0
  }
  footer {
    LineThickness 0
  }
  header {
    LineThickness 0
  }
  node {
    MaximumWidth 300
  }
  title {
    FontSize 22
    LineThickness 0
  }
</style>

skinparam ArrowLollipopColor black
skinparam BackgroundColor white
skinparam DefaultFontName Verdana
skinparam DefaultMonospacedFontName Courier
skinparam LifelineStrategy nosolid
skinparam ParticipantPadding 10
skinparam SequenceLifeLineBorderColor black
skinparam Shadowing false
skinparam UseBetaStyle true

skinparam Activity {
  BackgroundColor white
  BarColor black
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam Boundary {
  FontColor black
}
skinparam Box {
  Padding 5
}
skinparam CircledCharacter {
  FontColor black
  FontName Courier
  Radius 9
}
skinparam Class {
  BackgroundColor white
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam ClassAttribute {
  FontColor black
  FontName Verdana
}
skinparam ClassStereotype {
  FontColor black
  FontName Verdana
}
skinparam Footer {
  FontColor black
  FontName Verdana
}
skinparam Header {
  FontColor black
  FontName Verdana
}
skinparam Hyperlink {
  Color blue
}
skinparam IconPackage {
  Color black
  BackgroundColor white
}
skinparam IconPrivate {
  Color black
  BackgroundColor white
}
skinparam IconProtected {
  Color black
  BackgroundColor white
}
skinparam IconPublic {
  Color black
  BackgroundColor white
}
skinparam Note {
  FontColor black
  FontName Verdana
}
skinparam Object {
  BorderColor black
}
skinparam Package {
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam State {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeA {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeC {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeE {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeI {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeN {
  BackgroundColor white
  BorderColor black
}
skinparam UseCaseStereoType {
  FontColor black
  FontName Verdana
}
:开始;
:传入字符串;
while (检测字符串结束标志) is (是)
    :调用调用串口发送字符数据函数;
endwhile
:结束;

@enduml·

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>