<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="209px" preserveAspectRatio="none" style="width:752px;height:209px;background:#FFFFFF;" version="1.1" viewBox="0 0 752 209" width="752px" zoomAndPan="magnify"><defs/><g><!--MD5=[074277506330a0024f6dedf77b97e528]
cluster ESP8266初始化--><g id="cluster_ESP8266初始化"><path d="M13.5,12.1191 L191.5,12.1191 A3.75,3.75 0 0 1 194,14.6191 L201,44.8564 L345.5,44.8564 A2.5,2.5 0 0 1 348,47.3564 L348,197.1191 A2.5,2.5 0 0 1 345.5,199.6191 L13.5,199.6191 A2.5,2.5 0 0 1 11,197.1191 L11,14.6191 A2.5,2.5 0 0 1 13.5,12.1191 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="11" x2="201" y1="44.8564" y2="44.8564"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="177" x="15" y="36.2373">ESP8266初始化</text></g><!--MD5=[ecfd441c73968118282b664f3ef73985]
cluster ESP8266发送数据--><g id="cluster_ESP8266发送数据"><path d="M374.5,13.1191 L574.5,13.1191 A3.75,3.75 0 0 1 577,15.6191 L584,45.8564 L742.5,45.8564 A2.5,2.5 0 0 1 745,48.3564 L745,199.6191 A2.5,2.5 0 0 1 742.5,202.1191 L374.5,202.1191 A2.5,2.5 0 0 1 372,199.6191 L372,15.6191 A2.5,2.5 0 0 1 374.5,13.1191 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="372" x2="584" y1="45.8564" y2="45.8564"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="199" x="376" y="37.2373">ESP8266发送数据</text></g><g id="elem_cwmode"><ellipse cx="94.9474" cy="73.0086" fill="#FFFFFF" rx="67.4474" ry="15.8895" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="84" x="49.9474" y="77.2962">设置工作模式</text></g><g id="elem_cwjap"><ellipse cx="249.9169" cy="73.1815" fill="#FFFFFF" rx="51.9169" ry="15.0624" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="57" x="218.9307" y="77.3625">连接WiFi</text></g><g id="elem_cipmux"><ellipse cx="94.9474" cy="167.5086" fill="#FFFFFF" rx="67.4474" ry="15.8895" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="84" x="49.9474" y="171.7962">设置连接模式</text></g><g id="elem_cipstart"><ellipse cx="265.0992" cy="167.439" fill="#FFFFFF" rx="67.0992" ry="15.8198" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="83" x="220.5992" y="171.7266">建立TCP连接</text></g><g id="elem_cipsend"><ellipse cx="554.1861" cy="73.176" fill="#FFFFFF" rx="51.1861" ry="15.0569" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="56" x="523.9615" y="77.3005">发送数据</text></g><g id="elem_mqttcon"><ellipse cx="459.7975" cy="167.3786" fill="#FFFFFF" rx="71.7975" ry="16.7595" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="96" x="410.0767" y="171.3834">建立MQTT连接</text></g><g id="elem_mqttpub"><ellipse cx="648.1" cy="167.7391" fill="#FFFFFF" rx="81.1" ry="18.62" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="119" x="588.6" y="171.307">发送MQTTT数据报</text></g><!--MD5=[dc3785bc20e209f89faac1006a102bc3]
reverse link cipsend to mqttcon--><g id="link_cipsend_mqttcon"><path d="M536.36,91.4691 C519.06,108.4991 492.9,134.2391 476.14,150.7391 " fill="none" id="cipsend-backto-mqttcon" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="#000000" points="540.13,87.7691,530.9093,91.2301,536.566,91.2759,536.5202,96.9326,540.13,87.7691" style="stroke:#000000;stroke-width:1.0;"/></g><!--MD5=[6dd7bf48d28b0e9057db532d8e5da940]
reverse link cipsend to mqttpub--><g id="link_cipsend_mqttpub"><path d="M571.54,91.3791 C588.4,107.9691 613.72,132.8891 630.55,149.4491 " fill="none" id="cipsend-backto-mqttpub" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="#000000" points="567.87,87.7691,571.4798,96.9326,571.434,91.2759,577.0907,91.2301,567.87,87.7691" style="stroke:#000000;stroke-width:1.0;"/></g><!--MD5=[7464599aef4416ef67d7fbfaa45831ae]
@startuml
!theme plain
package ESP8266初始化{
usecase 设置工作模式 as cwmode
usecase 连接WiFi as cwjap
usecase 设置连接模式 as cipmux
usecase 建立TCP连接 as cipstart
}
package ESP8266发送数据{
usecase 发送数据 as cipsend
usecase 建立MQTT连接 as mqttcon
usecase 发送MQTTT数据报 as mqttpub
}
cipsend <- - mqttcon
cipsend <- - mqttpub

@enduml

@startuml







<style>
  root {
    BackgroundColor white
    FontColor black
    FontName Verdana
    HyperLinkColor blue
    LineColor black
    LineThickness 1
    Margin 5
  }
  caption {
    LineThickness 0
  }
  footer {
    LineThickness 0
  }
  header {
    LineThickness 0
  }
  node {
    MaximumWidth 300
  }
  title {
    FontSize 22
    LineThickness 0
  }
</style>

skinparam ArrowLollipopColor black
skinparam BackgroundColor white
skinparam DefaultFontName Verdana
skinparam DefaultMonospacedFontName Courier
skinparam LifelineStrategy nosolid
skinparam ParticipantPadding 10
skinparam SequenceLifeLineBorderColor black
skinparam Shadowing false
skinparam UseBetaStyle true

skinparam Activity {
  BackgroundColor white
  BarColor black
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam Boundary {
  FontColor black
}
skinparam Box {
  Padding 5
}
skinparam CircledCharacter {
  FontColor black
  FontName Courier
  Radius 9
}
skinparam Class {
  BackgroundColor white
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam ClassAttribute {
  FontColor black
  FontName Verdana
}
skinparam ClassStereotype {
  FontColor black
  FontName Verdana
}
skinparam Footer {
  FontColor black
  FontName Verdana
}
skinparam Header {
  FontColor black
  FontName Verdana
}
skinparam Hyperlink {
  Color blue
}
skinparam IconPackage {
  Color black
  BackgroundColor white
}
skinparam IconPrivate {
  Color black
  BackgroundColor white
}
skinparam IconProtected {
  Color black
  BackgroundColor white
}
skinparam IconPublic {
  Color black
  BackgroundColor white
}
skinparam Note {
  FontColor black
  FontName Verdana
}
skinparam Object {
  BorderColor black
}
skinparam Package {
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam State {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeA {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeC {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeE {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeI {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeN {
  BackgroundColor white
  BorderColor black
}
skinparam UseCaseStereoType {
  FontColor black
  FontName Verdana
}
package ESP8266初始化{
usecase 设置工作模式 as cwmode
usecase 连接WiFi as cwjap
usecase 设置连接模式 as cipmux
usecase 建立TCP连接 as cipstart
}
package ESP8266发送数据{
usecase 发送数据 as cipsend
usecase 建立MQTT连接 as mqttcon
usecase 发送MQTTT数据报 as mqttpub
}
cipsend <- - mqttcon
cipsend <- - mqttpub

@enduml

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>