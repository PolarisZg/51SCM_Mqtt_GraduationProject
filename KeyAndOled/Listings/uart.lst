C51 COMPILER V9.57.0.0   UART                                                              03/17/2023 13:23:11 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE include\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "uart.h"
   2          #include "stdio.h"
   3          #include "delay.h"
   4          
   5          #define BAUD 115200UL             //串口波特率
   6          #define S1_S0 0x40              //P_SW1.6
   7          #define S1_S1 0x80              //P_SW1.7
   8          #define STI   0x02              //S4CON.1
   9          
  10          bit busy;
  11          
  12          unsigned char uart1_buf[128] = {0};
  13          unsigned char UART1_LEN = 0, UART1_STA = 0;
  14          
  15          void Uart1_Init(void)//串口初始化函数
  16          {
  17   1        ACC = P_SW1;
  18   1        ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0(P3.0/RxD, P3.1/TxD)
  19   1        P_SW1 = ACC;
  20   1        SCON  = (SCON & 0x3f) | 0x40;                //8位可变波特率
  21   1        
  22   1        T2L = (65536 - (MAIN_Fosc/4/BAUD));   //设置波特率重装值
  23   1        T2H = (65536 - (MAIN_Fosc/4/BAUD))>>8;
  24   1      
  25   1        AUXR = 0x14;                //T2为1T模式, 并启动定时器2
  26   1        AUXR |= 0x01;               //选择定时器2为串口1的波特率发生器
  27   1        PS = 1; //高优先级中断
  28   1        
  29   1        ES = 1;     //使能串口1中断
  30   1        REN = 1;  //允许接收
  31   1        EA = 1;   //允许全局中断
  32   1      }
  33          
  34          //串口中断函数      不管程序运行到哪里，只要串口收到数据，程序就会停止 并 
             -跳转到这里，执行完中断函数后  再回到原来停止的地方 继续执行
  35          void Uart1() interrupt 4 using 1
  36          {
  37   1        unsigned char Res;
  38   1        
  39   1        if (RI)
  40   1        {
  41   2          RI = 0;
  42   2      
  43   2          Res = SBUF;
  44   2          if (UART1_LEN < 128)
  45   2          {
  46   3            uart1_buf[UART1_LEN++] = Res;
  47   3          }
  48   2      
  49   2          if (Res == '\r') //按下回车键
  50   2          {
  51   3            UART1_STA = 1;
  52   3            UART1_LEN = 0;
  53   3          }
C51 COMPILER V9.57.0.0   UART                                                              03/17/2023 13:23:11 PAGE 2   

  54   2        }
  55   1        if (TI)
  56   1        {
  57   2          TI = 0;
  58   2          busy = 0;
  59   2        }
  60   1      }
  61          
  62          //串口发送一个字节
  63          void SendData(unsigned char dat)  //dat是要发送的字节
  64          {
  65   1        while (busy)
  66   1          ; //等待前面的数据发送完成
  67   1        busy = 1;
  68   1        SBUF = dat; //写数据到UART1数据寄存器
  69   1      }
  70          
  71          //串口发送数组函数
  72          void Uart1SendData(char *s, unsigned short len)   //*s是一个指针   指向要发送的数组    len是
             -要发送数组的长度（单位字节）
  73          {
  74   1          while (len)               // 当len等于0  就借宿{}中的循环
  75   1          {
  76   2          SendData(*s++);         //发送当前字节  发送完成后  指针++  指向下一个字节
  77   2          len--;                  //发送长度减1
  78   2          }
  79   1      }
  80          
  81          // printf 函数用到的串口发送函数   如果没有  就不能用printf 这个函数
  82          char putchar(char c)
  83          {
  84   1        ES = 0;                 //关闭串口1中断
  85   1        
  86   1        SBUF = c;
  87   1        
  88   1        while(!TI);
  89   1        TI = 0;         //清除TI位
  90   1        
  91   1        ES = 1;                 //使能串口1中断
  92   1        
  93   1        return c;
  94   1      }
  95          
  96          // 发送字符串
  97          void SendString(char *s)
  98          {
  99   1        while (*s) //检测字符串结束标志
 100   1        {
 101   2          SendData(*s++); //发送当前字符
 102   2        }
 103   1      }
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    211    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    130       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.57.0.0   UART                                                              03/17/2023 13:23:11 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
