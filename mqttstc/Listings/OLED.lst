C51 COMPILER V9.57.0.0   OLED                                                              03/26/2023 11:58:53 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\OLED.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE include\OLED.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\OLED.lst) TABS(2) OBJECT(.\Objects\OLED.obj)

line level    source

   1          //******************************************************************************/。
   2          #include "oled.h"
   3          #include "oled_font.h"
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127  
   7          //[1]0 1 2 3 ... 127  
   8          //[2]0 1 2 3 ... 127  
   9          //[3]0 1 2 3 ... 127  
  10          //[4]0 1 2 3 ... 127  
  11          //[5]0 1 2 3 ... 127  
  12          //[6]0 1 2 3 ... 127  
  13          //[7]0 1 2 3 ... 127         
  14          static void delay_us(unsigned int ms)
  15          {
  16   1        while(ms--);
  17   1      }
  18          /**********************************************
  19          //IIC Start
  20          **********************************************/
  21          void IIC_Start()
  22          {
  23   1        OLED_SCL = 1;
  24   1        OLED_SDIN = 1;
  25   1        delay_us(1);
  26   1        OLED_SDIN = 0;
  27   1        delay_us(1);
  28   1        OLED_SCL = 0;
  29   1      }
  30          
  31          /**********************************************
  32          //IIC Stop
  33          **********************************************/
  34          void IIC_Stop()
  35          {
  36   1        OLED_SCL = 0;
  37   1        OLED_SDIN = 0;
  38   1        delay_us(1);
  39   1        OLED_SCL = 1;
  40   1        delay_us(1);
  41   1        OLED_SDIN = 1;
  42   1      }
  43          
  44          void IIC_Wait_Ack()
  45          {
  46   1        OLED_SCL = 1;
  47   1        delay_us(1);
  48   1        OLED_SCL = 0;
  49   1        delay_us(1);
  50   1      }
  51          /**********************************************
  52          // IIC Write byte
  53          **********************************************/
  54          
C51 COMPILER V9.57.0.0   OLED                                                              03/26/2023 11:58:53 PAGE 2   

  55          void Write_IIC_Byte(unsigned char IIC_Byte)
  56          {
  57   1        unsigned char i;
  58   1        unsigned char da;
  59   1        
  60   1        da = IIC_Byte;
  61   1        
  62   1        for(i=0;i<8;i++)    
  63   1        {
  64   2          if(da & 0x80)
  65   2          {
  66   3            OLED_SDIN = 1;
  67   3          }else
  68   2          {
  69   3            OLED_SDIN = 0;
  70   3          }
  71   2          
  72   2          OLED_SCL = 1;
  73   2          delay_us(1);
  74   2          OLED_SCL = 0;
  75   2          delay_us(1);
  76   2          
  77   2          da <<= 1;
  78   2        }
  79   1      }
  80          /**********************************************
  81          // IIC Write Command
  82          **********************************************/
  83          void Write_IIC_Command(unsigned char IIC_Command)
  84          {
  85   1        IIC_Start();
  86   1        Write_IIC_Byte(0x78);            //Slave address,SA0=0
  87   1        IIC_Wait_Ack(); 
  88   1        Write_IIC_Byte(0x00);     //write command
  89   1        IIC_Wait_Ack(); 
  90   1        Write_IIC_Byte(IIC_Command); 
  91   1        IIC_Wait_Ack(); 
  92   1        IIC_Stop();
  93   1      }
  94          /**********************************************
  95          // IIC Write Data
  96          **********************************************/
  97          void Write_IIC_Data(unsigned char IIC_Data)
  98          {
  99   1        IIC_Start();
 100   1        Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 101   1        IIC_Wait_Ack(); 
 102   1        Write_IIC_Byte(0x40);     //write data
 103   1        IIC_Wait_Ack(); 
 104   1        Write_IIC_Byte(IIC_Data);
 105   1        IIC_Wait_Ack(); 
 106   1        IIC_Stop();
 107   1      }
 108          void OLED_WR_Byte(unsigned char dat, unsigned char cmd)
 109          {
 110   1        if(cmd)
 111   1        {
 112   2          Write_IIC_Data(dat);
 113   2        }
 114   1        else
 115   1        {
 116   2          Write_IIC_Command(dat);
C51 COMPILER V9.57.0.0   OLED                                                              03/26/2023 11:58:53 PAGE 3   

 117   2        }
 118   1      }
 119          
 120          
 121          
 122          
 123          
 124          
 125          
 126          
 127          
 128          
 129          
 130          /********************************************
 131          // fill_Picture
 132          ********************************************/
 133          void fill_picture(unsigned char fill_Data)
 134          {
 135   1        unsigned char m, n;
 136   1        
 137   1        for(m=0; m<8; m++)
 138   1        {
 139   2          OLED_WR_Byte(0xb0 + m, 0);    //page0-page1
 140   2          OLED_WR_Byte(0x00,0);   //low column start address
 141   2          OLED_WR_Byte(0x10,0);   //high column start address
 142   2          for(n=0; n<128; n++)
 143   2          {
 144   3            OLED_WR_Byte(fill_Data,1);
 145   3          }
 146   2        }
 147   1      }
 148          
 149          
 150          /***********************Delay****************************************/
 151          void Delay_50ms(unsigned int Del_50ms)
 152          {
 153   1        unsigned int m;
 154   1        for(;Del_50ms>0;Del_50ms--)
 155   1          for(m=6245;m>0;m--);
 156   1      }
 157          
 158          void Delay_1ms(unsigned int Del_1ms)
 159          {
 160   1        unsigned char j;
 161   1        while(Del_1ms--)
 162   1        { 
 163   2          for(j=0;j<123;j++);
 164   2        }
 165   1      }
 166          
 167          //坐标设置
 168          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 169          {
 170   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 171   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 172   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 173   1      }       
 174          //开启OLED显示
 175          void OLED_Display_On(void)
 176          {
 177   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 178   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
C51 COMPILER V9.57.0.0   OLED                                                              03/26/2023 11:58:53 PAGE 4   

 179   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 180   1      }
 181          //关闭OLED显示
 182          void OLED_Display_Off(void)
 183          {
 184   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 185   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 186   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 187   1      }
 188          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!
 189          void OLED_Clear(void)  
 190          {
 191   1        unsigned char i, n;
 192   1        
 193   1        for(i=0; i<8; i++)  
 194   1        {
 195   2          OLED_WR_Byte (0xb0+i, OLED_CMD);    //设置页地址（0~7）
 196   2          OLED_WR_Byte (0x00, OLED_CMD);      //设置显示位置—列低地址
 197   2          OLED_WR_Byte (0x10, OLED_CMD);      //设置显示位置—列高地址   
 198   2          for(n=0; n<128; n++)
 199   2            OLED_WR_Byte(0, OLED_DATA); 
 200   2        }//更新显示
 201   1      }
 202          void OLED_On(void)  
 203          {
 204   1        unsigned char i, n;
 205   1        
 206   1        for(i=0; i<8; i++)  
 207   1        {
 208   2          OLED_WR_Byte (0xb0+i, OLED_CMD);    //设置页地址（0~7）
 209   2          OLED_WR_Byte (0x00, OLED_CMD);      //设置显示位置—列低地址
 210   2          OLED_WR_Byte (0x10, OLED_CMD);      //设置显示位置—列高地址   
 211   2          for(n=0; n<128; n++)
 212   2            OLED_WR_Byte(1, OLED_DATA); 
 213   2        }//更新显示
 214   1      }
 215          //在指定位置显示一个字符,包括部分字符
 216          //x:0~127
 217          //y:0~63
 218          //mode:0,反白显示;1,正常显示         
 219          //size:选择字体 16/12 
 220          void OLED_ShowChar(unsigned char x, unsigned char y, unsigned char chr, unsigned char Char_Size)
 221          {
 222   1        unsigned char c=0, i=0;
 223   1        
 224   1        c = chr - ' ';//得到偏移后的值
 225   1        
 226   1        if(x > Max_Column - 1)//换行处理
 227   1        {
 228   2          x = 0;
 229   2          y = y + 2;
 230   2        }
 231   1        
 232   1        if(Char_Size == 16)
 233   1        {
 234   2          OLED_Set_Pos(x, y);
 235   2          
 236   2          for(i=0; i<8; i++)
 237   2            OLED_WR_Byte(F8X16[c * 16 + i], OLED_DATA);
 238   2          
 239   2          OLED_Set_Pos(x, y + 1);
 240   2          
C51 COMPILER V9.57.0.0   OLED                                                              03/26/2023 11:58:53 PAGE 5   

 241   2          for(i=0; i<8; i++)
 242   2            OLED_WR_Byte(F8X16[c * 16 + i + 8], OLED_DATA);
 243   2        }
 244   1        else if(Char_Size == 12)
 245   1        {
 246   2          OLED_Set_Pos(x, y);
 247   2          
 248   2          for(i=0; i<6; i++)
 249   2            OLED_WR_Byte(F6x8[c][i], OLED_DATA);
 250   2        }
 251   1      }
 252          //m^n函数
 253          unsigned int oled_pow(unsigned char m, unsigned char n)
 254          {
 255   1        unsigned int result = 1;
 256   1        
 257   1        while(n--)
 258   1          result *= m;
 259   1        
 260   1        return result;
 261   1      }
 262          //显示2个数字
 263          //x,y :起点坐标  
 264          //len :数字的位数
 265          //size:字体大小
 266          //mode:模式 0,填充模式;1,叠加模式
 267          //num:数值(0~4294967295);       
 268          void OLED_ShowNum(unsigned char x, unsigned char y, unsigned int num, unsigned char len, unsigned char siz
             -e2)
 269          {
*** WARNING C235 IN LINE 269 OF include\OLED.c: parameter 3: different types
 270   1        unsigned char t, temp;
 271   1        unsigned char enshow = 0;
 272   1        
 273   1        for(t=0; t<len; t++)
 274   1        {
 275   2          temp = (num / oled_pow(10, len - t - 1)) % 10;
 276   2          
 277   2          if(enshow == 0 && t < (len - 1))
 278   2          {
 279   3            if(temp == 0)
 280   3            {
 281   4              OLED_ShowChar(x + (size2 / 2) * t, y, ' ', size2);
 282   4              continue;
 283   4            }
 284   3            else
 285   3              enshow = 1;
 286   3          }
 287   2          
 288   2          OLED_ShowChar(x + (size2 / 2) * t, y, temp + '0', size2); 
 289   2        }
 290   1      } 
 291          //显示一个字符号串
 292          void OLED_ShowString(unsigned char x, unsigned char y, unsigned char *chr, unsigned char Char_Size)
 293          {
 294   1        unsigned char j = 0;
 295   1        
 296   1        while (chr[j] != '\0')
 297   1        {
 298   2          OLED_ShowChar(x, y, chr[j], Char_Size);
 299   2          
 300   2          x+=8;
C51 COMPILER V9.57.0.0   OLED                                                              03/26/2023 11:58:53 PAGE 6   

 301   2          
 302   2          if(x > 120)
 303   2          {
 304   3            x = 0;
 305   3            y += 2;
 306   3          }
 307   2          
 308   2          j++;
 309   2        }
 310   1      }
 311          //显示汉字
 312          void OLED_ShowCHinese(unsigned char x, unsigned char y, unsigned char no)
 313          {               
 314   1        unsigned char t, adder=0;
 315   1        
 316   1        OLED_Set_Pos(x, y);
 317   1        
 318   1        for(t=0; t<16; t++)
 319   1        {
 320   2          OLED_WR_Byte(Hzk[2*no][t], OLED_DATA);
 321   2          adder+=1;
 322   2        }
 323   1        
 324   1        OLED_Set_Pos(x, y+1);
 325   1        
 326   1        for(t=0; t<16; t++)
 327   1        {
 328   2          OLED_WR_Byte(Hzk[2*no+1][t], OLED_DATA);
 329   2          adder+=1;
 330   2        }
 331   1      }
 332          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的
             -范围0～7*****************/
 333          void OLED_DrawBMP(unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1, unsigned char BM
             -P[])
 334          {
 335   1        unsigned int j = 0;
 336   1        unsigned char x, y;
 337   1      
 338   1        x1 += 1;
 339   1        y1 += 1;
 340   1        
 341   1        if((y1 % 8) == 0)
 342   1          y = y1 / 8;
 343   1        else
 344   1          y = y1 / 8 + 1;
 345   1        
 346   1        for(y=y0; y<y1; y++)
 347   1        {
 348   2          OLED_Set_Pos(x0, y);
 349   2          
 350   2          for(x=x0; x<x1; x++)
 351   2          {      
 352   3            OLED_WR_Byte(BMP[j++], OLED_DATA);        
 353   3          }
 354   2        }
 355   1      } 
 356          
 357          //初始化SSD1306              
 358          void OLED_Init(void)
 359          {
 360   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
C51 COMPILER V9.57.0.0   OLED                                                              03/26/2023 11:58:53 PAGE 7   

 361   1        
 362   1        //推挽输出
 363   1        GPIO_InitStructure.Mode = GPIO_OUT_PP;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OU
             -T_OD,GPIO_OUT_PP
 364   1        GPIO_InitStructure.Pin  = GPIO_Pin_5;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
 365   1        GPIO_Inilize(GPIO_P4, &GPIO_InitStructure); //初始化
 366   1        
 367   1        //开漏输出
 368   1        GPIO_InitStructure.Mode = GPIO_OUT_OD;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OU
             -T_OD,GPIO_OUT_PP
 369   1        
 370   1        GPIO_InitStructure.Pin  = GPIO_Pin_6;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
 371   1        GPIO_Inilize(GPIO_P4, &GPIO_InitStructure); //初始化
 372   1        
 373   1        
 374   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 375   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 376   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 377   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 378   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 379   1        OLED_WR_Byte(0x81,OLED_CMD);// contract control
 380   1        OLED_WR_Byte(0xFF,OLED_CMD);                                                                    //--128
 381   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 382   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 383   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 384   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 385   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 386   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 387   1        OLED_WR_Byte(0x00,OLED_CMD);//
 388   1      
 389   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 390   1        OLED_WR_Byte(0x80,OLED_CMD);//
 391   1      
 392   1        OLED_WR_Byte(0xD8,OLED_CMD);                                                                    //set area color mode off
 393   1        OLED_WR_Byte(0x05,OLED_CMD);                                                                    //
 394   1      
 395   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 396   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 397   1      
 398   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 399   1        OLED_WR_Byte(0x12,OLED_CMD);//
 400   1      
 401   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 402   1        OLED_WR_Byte(0x30,OLED_CMD);//
 403   1      
 404   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 405   1        OLED_WR_Byte(0x14,OLED_CMD);                                                                    //
 406   1      
 407   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 408   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1555    ----
   CONSTANT SIZE    =   3864    ----
   XDATA SIZE       =   ----      49
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
