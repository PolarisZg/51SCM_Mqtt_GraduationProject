C51 COMPILER V9.57.0.0   UART_4                                                            03/17/2023 00:00:55 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE UART_4
OBJECT MODULE PLACED IN .\Objects\Uart_4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE include\Uart_4.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\Uart_4.lst) TABS(2) OBJECT(.\Objects\Uart_4.obj)

line level    source

   1          //本示例在Keil开发环境下请选择Intel的8058芯片型号进行编译
   2          //若无特别说明,工作频率一般为11.0592MHz
   3          #include "Uart_4.h"
   4          
   5          typedef unsigned char BYTE;
   6          typedef unsigned int WORD;
   7          
   8          //#define FOSC 11059200L          //系统频率
   9          #define BAUD 115200             //串口波特率
  10          
  11          #define NONE_PARITY     0       //无校验
  12          #define ODD_PARITY      1       //奇校验
  13          #define EVEN_PARITY     2       //偶校验
  14          #define MARK_PARITY     3       //标记校验
  15          #define SPACE_PARITY    4       //空白校验
  16          
  17          #define PARITYBIT NONE_PARITY   //定义校验位
  18          
  19          
  20          //sfr AUXR  = 0x8e;               //辅助寄存器
  21          //sfr S4CON = 0x84;               //UART4 控制寄存器
  22          //sfr T2H   = 0xd6;               //定时器2高8位
  23          //sfr T2L   = 0xd7;               //定时器2低8位
  24          
  25          #define S4RI  0x01              //S4CON.0
  26          #define S4TI  0x02              //S4CON.1
  27          #define S4RB8 0x04              //S4CON.2
  28          #define S4TB8 0x08              //S4CON.3
  29          
  30          #define S4_S0 0x04              //P_SW2.2
  31          
  32          bit uart4_busy;
  33          
  34          
  35          void Uart4_Init(void)
  36          {
  37   1        P_SW2 |= S4_S0;             //S4_S0=1 (P5.2/RxD4_2, P5.3/TxD4_2)
  38   1      
  39   1        S4CON = 0x10;               //8位可变波特率
  40   1      
  41   1        T2L = (65536 - (MAIN_Fosc/4/BAUD));   //设置波特率重装值
  42   1        T2H = (65536 - (MAIN_Fosc/4/BAUD))>>8;
  43   1      
  44   1        AUXR = 0x14;                //T2为1T模式, 并启动定时器2
  45   1        PS = 0; //高优先级中断
  46   1        
  47   1        IE2 = 0x10;                 //使能串口4中断
  48   1      }
  49          
  50          /*----------------------------
  51          UART4 中断服务程序
  52          -----------------------------*/
  53          void Uart4() interrupt 18 using 1
  54          {
C51 COMPILER V9.57.0.0   UART_4                                                            03/17/2023 00:00:55 PAGE 2   

  55   1        
  56   1          if (S4CON & S4RI)
  57   1          {
  58   2          S4CON &= ~S4RI;         //清除S4RI位
  59   2            
  60   2          uart4_race_buf[uart4_race_count] = S4BUF; 
  61   2          uart4_race_count++;
  62   2          if(uart4_race_count>=100)
  63   2          {
  64   3            uart4_race_count = 0;
  65   3          }
  66   2          }
  67   1          
  68   1          if (S4CON & S4TI)
  69   1          {
  70   2              S4CON &= ~S4TI;         //清除S4TI位
  71   2              uart4_busy = 0;               //清忙标志
  72   2          }
  73   1      }
  74          
  75          /*----------------------------
  76          发送串口数据
  77          ----------------------------*/
  78          void uart4_SendData(BYTE dat)
  79          {
  80   1          while (uart4_busy);               //等待前面的数据发送完成
  81   1          uart4_busy = 1;
  82   1          S4BUF = dat;                //写数据到UART4数据寄存器
  83   1      }
  84          
  85          /*----------------------------
  86          发送字符串
  87          ----------------------------*/
  88          void uart4_SendString(char *s)
  89          {
  90   1          while (*s)                  //检测字符串结束标志
  91   1          {
  92   2              uart4_SendData(*s++);         //发送当前字符
  93   2          }
  94   1      }
  95          
  96          void uart4_putchar(char c)
  97          {
  98   1        IE2 &= ~0x10;                 //使能串口4中断
  99   1        
 100   1        S4BUF = c;
 101   1        
 102   1        while((S4CON & S4TI) == 0);
 103   1        S4CON &= ~S4TI;         //清除S4TI位
 104   1        
 105   1        IE2 = 0x10;                 //使能串口4中断
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.57.0.0   UART_4                                                            03/17/2023 00:00:55 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
